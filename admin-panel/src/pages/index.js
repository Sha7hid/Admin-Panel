import Head from "next/head";
import React, { useState } from "react";

// bootstrap card and navbar
import Card from "react-bootstrap/Card";
import Container from "react-bootstrap/Container";
import Navbar from "react-bootstrap/Navbar";
import Nav from "react-bootstrap/Nav";

import styles from "../styles/Home.module.css";
import { Row, Col, Button } from "react-bootstrap";
import Link from "next/link";

// Importing the Modal component created in the components folder
import Modals from "@/components/modal";

// getServerSideProps is used to fetch dynamic data instead of getStaticProps which will display data of last update in the code
export const getServerSideProps = async () => {
  // fetching data from the api and saving it in Json format in results
  const res = await fetch(
    // Your API Get endpoint here,
    { cache: "no-store" }
  );
  const data = await res.json();
  return {
    props: { results: data },
  };
};
// Main function
export default function Home({ results }) {
  // selected id is used to get the data of the updating data to display it in the form
  const [selectedId, setSelectedId] = useState(null);

  // success is used to show successfully deleted if the data is deleted
  const [success, setSuccess] = useState(null);

  // handleShow is used to give the id of the updating element to the modal component as a prop
  const handleShow = (id) => {
    setSelectedId(id);
  };

  // handleClose is used to close the modal
  const handleClose = () => {
    setSelectedId(null);
  };

  // handleDelete is the function to delete the data selected by giving its id to the delete endpoint of the api
  const handleDelete = (props) => {
    const id = props;

    fetch(
      // ` Your API Delete endpoint here/${id}`,
      {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
      }
    )
      .then((response) => response.json())
      .then((data) => console.log(data))
      .then(setSuccess("Succesfully Deleted"))
      .catch((error) => console.error(error));
  };

  return (
    <>
      <Head>
        <title>Admin Panel</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/admin.png" />
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
          integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
          crossorigin="anonymous"
        />
      </Head>
      {/* Navbar */}
      <Navbar className={styles.navbar} fixed="top" bg="dark" variant="dark">
        <Container>
          <Navbar.Brand href={"/"}>Admin Panel</Navbar.Brand>

          <Navbar.Toggle aria-controls="basic-navbar-nav" />
          <Navbar.Collapse id="basic-navbar-nav">
            <Nav className="me-auto">
              <Link className={styles.link} href={"/add"}>
                Add New Data
              </Link>
            </Nav>
          </Navbar.Collapse>
        </Container>
        <p className={styles.success}>{success}</p>
      </Navbar>
      {/* Main Body */}
      <main className={styles.main}>
        {/* Using results to dispaly the data fetched from the api */}
        {/* Importing modal by giving it props to update it will be only shown when update button is clicked */}
        {results.map((result) => (
          <Modals
            key={result._id}
            show={selectedId === result._id}
            handleClose={handleClose}
            result={result}
          />
        ))}
        {/* Row in which all the updated data are shown in columns in the format of bootstrap card with update and delete button */}
        <Row>
          {results.map((result) => (
            <>
              <Col>
                <Card
                  style={{
                    width: "18rem",
                    marginTop: "2rem",
                    marginLeft: "1.5rem",
                    marginBottom: "1rem",
                  }}
                >
                  <Card.Img
                    width={250}
                    height={350}
                    variant="top"
                    src={result.image}
                  />
                  <Card.Body>
                    <Card.Title>{result.name}</Card.Title>
                    <Card.Text>Rating - {result.rating}</Card.Text>
                    <Card.Text>Released Year - {result.release_year}</Card.Text>
                    <Card.Footer>
                      <Button
                        variant="default"
                        className={styles.button}
                        onClick={() => handleShow(result._id)}
                      >
                        Update
                      </Button>
                      <Button
                        variant="default"
                        className={styles.button2}
                        onClick={() => handleDelete(result._id)}
                      >
                        Delete
                      </Button>
                    </Card.Footer>
                  </Card.Body>
                </Card>
              </Col>
            </>
          ))}
        </Row>
      </main>
    </>
  );
}
